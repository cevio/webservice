var querystring = require('querystring');
var utils = require('./utils');
var cookie = require('./cookie');
var request = module.exports = function(){
    this.href = null;
    this.query = null;
    this.params = null;
    this.path = null;
    this.search = null;
    this.method = null;
    this.referer = null;
    utils.defineFreeze(this, 'define', function(name, value){ utils.define(this, name, value); });
    utils.defineFreeze(this, 'defineFreeze', function(name, value){ utils.defineFreeze(this, name, value); });
    this.defineFreeze('paths', []);
    this.init();
    this.store = makeStorages('local');
    this.session = makeStorages('session');
    this.cookie = cookie.get() || {};
};

request.prototype.init = function(){
    this.href = (window.location.hash || '').replace(/^#/, '') || '/';
    var index = this.href.indexOf('?');
    if ( index > -1 ){
        this.path = this.href.substring(0, index);
        this.search = this.href.substring(index + 1);
    }else{
        this.path = this.href;
        this.search = '';
    }
    this.path = this.path || '/';
    if ( this.search.length ){
        this.query = querystring.format(this.search);
    }else{
        this.query = {};
    }
    this.method = 'active';
    if ( this.paths.indexOf(this.path) == -1 ){
        this.method = 'load';
        this.paths.push(this.path);
    }
    var q = window.location.search ? window.location.search.replace(/^\?/, '') : '';
    if ( q ){
        q = querystring.format(q);
        for ( var i in q ){
            this.query[i] = q[i];
        }
        this.search = querystring.toString(this.query);
    }
};

function makeStorages(type){
    var object = window[type + 'Storage'], objs = {};
    if ( object ){
        for ( var i in object ){
            objs[i] = object.getItem(i);
        }
    }
    return objs;
}