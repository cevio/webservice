var cookie = require('./cookie');
var jsonp = require('jsonp');
var utils = require('./utils');
var querystring = require('querystring');
var Promise = require('es6-promise').Promise;

var store = {
    set: function(name, value){
        window.localStorage.setItem(name, JSON.stringify(value));
    },
    remove: function(name){
        window.localStorage.removeItem(name);
    }
};

var response = module.exports = function(){
    utils.defineFreeze(this, 'define', function(name, value){ utils.define(this, name, value); });
    utils.defineFreeze(this, 'defineFreeze', function(name, value){ utils.defineFreeze(this, name, value); });
    this.defineFreeze('title', setTitle);
    this.defineFreeze('cookie', cookie);
    this.defineFreeze('jsonp', renderJSONP);
    this.defineFreeze('store', store);
};

response.prototype.redirect = function(url){
    var http = this.http;
    var req = http.request;
    var that = this;
    history.pushState({ url: url }, document.title, '#' + url);
    setTimeout(function(){
        req.init();
        http.match(function(){
            http.emit('redirected', req, that);
        });
    }, 0);
};

function setTitle(title){
    var $body = document.body;
    document.title = title;
    // hack在微信等webview中无法修改document.title的情况
    var $iframe = document.createElement('iframe');
    $iframe.src = '/favicon.ico';
    $iframe.onload = function(){
        setTimeout(function() {
            $iframe.parentNode.removeChild($iframe);
        }, 0);
    };
    $body.appendChild($iframe);
}

function renderJSONP(){
    var args = arguments;
    var url, arg, callback;
    for ( let i = 0 ; i < args.length ; i++ ){
        switch (Object.prototype.toString.call(args[i])){
            case '[object Function]':
                callback = args[i];
                break;
            case '[object Object]':
                arg = args[i];
                break;
            case '[object String]':
                url = args[i];
                break;
        }
    }
    if ( !arg ) arg = {};
    let index = url.indexOf('?');
    let path, search;
    if ( index > -1 ){
        path = url.substring(0, index);
        search = url.substring(index + 1);
    }else{
        path = url.replace(/\?$/, '');
        search = '';
    }
    if ( search ){
        let querys = querystring.format(search);
        for ( var i in querys ){
            if ( !arg[i] ){
                arg[i] = querys[i];
            }
        }
    }
    let searcher = querystring.toString(arg);
    if ( searcher.length ){
        url = path + '?' + searcher;
    }else{
        url = path;
    }

    if ( typeof callback === 'function' ){
        jsonp(url, callback);
    }else{
        return new Promise(function(resolve){
            jsonp(url, resolve);
        });
    }
}